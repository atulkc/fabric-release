---
name: peer
templates:
  peer_ctl.erb: bin/peer_ctl
  core.yaml.erb: config/core.yaml
  config.yaml.erb: config/config.yaml
  pre-start.erb: bin/pre-start
  post-deploy.erb: bin/post-deploy

packages:
  - peer
  - utils
  - golang
  - cgolibs
  - docker

consumes:
  - name: peers
    type: fabric_peers
  - name: membersrvc
    type: member_service
    optional: true

provides:
  - name: peers
    type: fabric_peers

properties:
  peer.core.logging_level:
    description: "Logging level"
    default: "DEBUG"

  peer.core.discovery.auto_detect:
    description: "Should peer perform auto discovery of other peers"
    default: true

  peer.core.discovery.root_node:
    description: "Root node of peer discovery"
    default: nil

  peer.core.data_path:
    description: "Path on the file system where peer will store data"
    default: "/var/vcap/store/hyperledger/production"

  peer.consensus.plugin:
    description: "The consensus algorithm to use"
    default: "noops"

  peer.maxNodes:
    description: "Maxnodes for validators and replicas"
    default: 7

  peer.network.id:
    description: "Network ID of the block chain network"
    default: "dev"

  peer.security.enabled:
    description: "Is security enabled in block chain"
    default: false

  peer.security.attributes.enabled:
    description: "Is attribute access enabled in block chain"
    default: false

  peer.security.multithreading.enabled:
    description: "Is multithreading enabled in block chain"
    default: false

  peer.chaincode.baseimage_release:
    description: "Hyperledger fabric docker base image version"
    default: "0.0.11"

  membersrvc.validators:
    description: "Validators to be configured in ECA"

